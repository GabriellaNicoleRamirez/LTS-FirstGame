<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.vel_x = 0
vel_y = 0
acc_x = 2
acc_y = 1.5
jump_speed = 20
global.direction_check = 1
global.player_health = 100

//instance_create(x,y-10,object_health_small)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Keyboard Check
key_left = -keyboard_check(ord('A'))
key_right = keyboard_check(ord('D'))
jump = keyboard_check(ord('W'))
attack = keyboard_check_pressed(vk_space)
sheild = keyboard_check(ord('Q'))
move = key_left + key_right

//Direction Check
if(global.vel_x != 0){
    global.direction_check = sign(global.vel_x)
    }

//Speed Limits
if(abs(global.vel_x) &gt; 15){
    global.vel_x = sign(global.vel_x)*15
    };

if(vel_y &gt; 20){
    vel_y = 20
    }
    
//Friction
if(place_meeting(x, y + 1, object_ground)){
    global.vel_x = .8*global.vel_x
    };
    
if(place_meeting(x, y + 1, object_platform)){
    global.vel_x = .8*global.vel_x
    }

//Velocity
if(place_meeting(x,y + 1,object_ground) || place_meeting(x,y + 1, object_platform)){
    global.vel_x = global.vel_x + move*acc_x
    };
    else{
    global.vel_x = global.vel_x + move*acc_x/4
    }
    
//Jumping
if(place_meeting(x,y + 1, object_ground) || place_meeting(x, y + 1, object_platform)){
    vel_y = -jump*jump_speed
    };

//Gravity
if(!place_meeting(x, y + 1, object_ground)){
    vel_y = vel_y + acc_y
    };
    
//attacking
if(attack = 1){
    if(alarm[1] = -1){
        if(global.direction_check = 1){
            instance_create(x+32,y,object_sword_attack)
            alarm[1] = 5
            }
        else if(global.direction_check = -1){
            instance_create(x,y,object_sword_attack)
            alarm[1] = 5
            }
        }
    }

if(attack = 1){
    if(alarm[2] = -1){
        if(global.direction_check = 1){
            instance_create(x+32,y,object_sword_hitbox)
            alarm[2] = 5
            }
        else if(global.direction_check = -1){
            instance_create(x,y,object_sword_hitbox)
            alarm[2] = 5
            }
        }
    }

//Sheild
if(sheild = 1){
    instance_create(x,y,object_sheild)
    }
if(sheild = 0){
    with(object_sheild)instance_destroy()
    }
/////////////////////////////////   
///////Collision Checking////////
/////////////////////////////////

if(place_meeting(x + global.vel_x, y , object_ground)){
    while(!place_meeting(x + sign(global.vel_x), y, object_ground)){
        x += sign(global.vel_x)
        };
        global.vel_x = 0
    };

if(place_meeting(x + global.vel_x, y , object_platform)){
    while(!place_meeting(x + sign(global.vel_x), y, object_platform)){
        x += sign(global.vel_x)
        };
        global.vel_x = 0
    };

x = x + global.vel_x //MOVES THE PLAYER

if(place_meeting(x, y + vel_y , object_ground)){
    while(!place_meeting(x, y + sign(vel_y), object_ground)){
        y += sign(vel_y)
        };
        vel_y = 0
    };
    
if(place_meeting(x, y + vel_y , object_platform)){
    while(!place_meeting(x, y + sign(vel_y), object_platform)){
        y += sign(vel_y)
        };
        vel_y = 0
    };

y = y + vel_y //MOVES THE PLAYER

//////////////////////////////////
/////////////End//////////////////
//////////////////////////////////


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_charger">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.player_health = global.player_health - 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_sprite_ext(sprite_health_small,0,x,y - 10,global.player_health/100,1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
